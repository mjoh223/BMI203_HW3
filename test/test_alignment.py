import sys
sys.path.append('/Users/matt/OneDrive/ucsf/algorithms/HW3')
from smith_waterman import scoringMatrixParse, matrix, traceback, evaluate, mutate
import os
import numpy as np
B50 = np.array([[5,-2,-1,-2,-1,-1,-1,0,-2,-1,-2,-1,-1,-3,-1,1,0,-3,-2,0,-2,-1,-1,-5],
[-2,7,-1,-2,-4,1,0,-3,0,-4,-3,3,-2,-3,-3,-1,-1,-3,-1,-3,-1,0,-1,-5],
[-1,-1,7,2,-2,0,0,0,1,-3,-4,0,-2,-4,-2,1,0,-4,-2,-3,4,0,-1,-5],
[-2,-2,2,8,-4,0,2,-1,-1,-4,-4,-1,-4,-5,-1,0,-1,-5,-3,-4,5,1,-1,-5],
[-1,-4,-2,-4,13,-3,-3,-3,-3,-2,-2,-3,-2,-2,-4,-1,-1,-5,-3,-1,-3,-3,-2,-5],
[-1,1,0,0,-3,7,2,-2,1,-3,-2,2,0,-4,-1,0,-1,-1,-1,-3,0,4,-1,-5],
[-1,0,0,2,-3,2,6,-3,0,-4,-3,1,-2,-3,-1,-1,-1,-3,-2,-3,1,5,-1,-5],
[0,-3,0,-1,-3,-2,-3,8,-2,-4,-4,-2,-3,-4,-2,0,-2,-3,-3,-4,-1,-2,-2,-5],
[-2,0,1,-1,-3,1,0,-2,10,-4,-3,0,-1,-1,-2,-1,-2,-3,2,-4,0,0,-1,-5],
[-1,-4,-3,-4,-2,-3,-4,-4,-4,5,2,-3,2,0,-3,-3,-1,-3,-1,4,-4,-3,-1,-5],
[-2,-3,-4,-4,-2,-2,-3,-4,-3,2,5,-3,3,1,-4,-3,-1,-2,-1,1,-4,-3,-1,-5],
[-1,3,0,-1,-3,2,1,-2,0,-3,-3,6,-2,-4,-1,0,-1,-3,-2,-3,0,1,-1,-5],
[-1,-2,-2,-4,-2,0,-2,-3,-1,2,3,-2,7,0,-3,-2,-1,-1,0,1,-3,-1,-1,-5],
[-3,-3,-4,-5,-2,-4,-3,-4,-1,0,1,-4,0,8,-4,-3,-2,1,4,-1,-4,-4,-2,-5],
[-1,-3,-2,-1,-4,-1,-1,-2,-2,-3,-4,-1,-3,-4,10,-1,-1,-4,-3,-3,-2,-1,-2,-5],
[1,-1,1,0,-1,0,-1,0,-1,-3,-3,0,-2,-3,-1,5,2,-4,-2,-2,0,0,-1,-5],
[0,-1,0,-1,-1,-1,-1,-2,-2,-1,-1,-1,-1,-2,-1,2,5,-3,-2,0,0,-1,0,-5],
[-3,-3,-4,-5,-5,-1,-3,-3,-3,-3,-2,-3,-1,1,-4,-4,-3,15,2,-3,-5,-2,-3,-5],
[-2,-1,-2,-3,-3,-1,-2,-3,2,-1,-1,-2,0,4,-3,-2,-2,2,8,-1,-3,-2,-1,-5],
[0,-3,-3,-4,-1,-3,-3,-4,-4,4,1,-3,1,-1,-3,-2,0,-3,-1,5,-4,-3,-1,-5],
[-2,-1,4,5,-3,0,1,-1,0,-4,-4,0,-3,-4,-2,0,0,-5,-3,-4,5,2,-1,-5],
[-1,0,0,1,-3,4,5,-2,0,-3,-3,1,-1,-4,-1,0,-1,-2,-2,-3,2,5,-1,-5],
[-1,-1,-1,-1,-2,-1,-1,-2,-1,-1,-1,-1,-1,-2,-2,-1,0,-3,-1,-1,-1,-1,-1,-5],
[-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,1]])

def test_alignment_format():
    seqA = "AtCtggTTcc"
    seqB = "atcTgccTcT"
    M = matrix(seqA, seqB, B50, -9, -3)
    assert np.issubdtype(M.dtype, np.dtype('int64')) #assert a matrix is produced dispite lowercase amino acids

def test_matrix():
    ############-- Online check --############################
    # Program: water
    # Rundate: Mon 25 Feb 2019 00:21:17
    # Commandline: water
    #    -auto
    #    -stdout
    #    -asequence emboss_water-I20190225-002115-0388-17773373-p2m.asequence
    #    -bsequence emboss_water-I20190225-002115-0388-17773373-p2m.bsequence
    #    -datafile EBLOSUM50
    #    -gapopen 10.0
    #    -gapextend 1.0
    #    -aformat3 pair
    #    -sprotein1
    #    -sprotein2
    # Align_format: pair
    # Report_file: stdout
    ########################################

    #=======================================
    #
    # Aligned_sequences: 2
    # 1: HBA_HUMAN
    # 2: HBA_MOUSE
    # Matrix: EBLOSUM50
    # Gap_penalty: 10.0
    # Extend_penalty: 1.0
    #
    # Length: 26
    # Identity:      18/26 (69.2%)
    # Similarity:    21/26 (80.8%)
    # Gaps:           0/26 ( 0.0%)
    # Score: 135.0
    #
    #
    #=======================================

    seqA = "MVLSPADKTNVKAAWGKVGAHAGEYG"
    seqB = "MVLSGEDKSNIKAAWGKIGGHGAEYGAE"
    M = matrix(seqA, seqB, B50, -10, -1)
    s = traceback(M, True, b=seqB, b_="", old_i=0)
    assert s == 135 #135 should be the score (shown above)
